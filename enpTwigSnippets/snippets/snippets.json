
{
    "Dump": {
        "prefix": "dump",
        "body": [
            "{{dump($1)}}"
        ],
        "description": "dump twig"
    },
    "set": {
        "prefix": "set",
        "body": [
            "{% set ${1:var} %}${2:...}{% endset %}"
        ],
        "description": "insert set block"
    },
    "set inline": {
        "prefix": "set inline",
        "body": [
            "{% set ${1:var} = ${2:value} %}"
        ],
        "description": "insert set inline var = value"
    },
    "block": {
        "prefix": "block",
        "body": [
            "{% block ${1:name} %}${2:...}{% endblock %}"
        ],
        "description": "insert block"
    },
    "extends": {
        "prefix": "extends",
        "body": [
            "{% extends '${1:template}' %}"
        ],
        "description": "add extends"
    },
    "for": {
        "prefix": "for",
        "body": [
            "{% for ${1:item} in ${2:data} %} ${3:...} {% endfor %}"
        ],
        "description": "add for loop"
    },
    "if": {
        "prefix": "if",
        "body": [
            "{% if ${1:condition} %} ${2:...} {% endif %}"
        ],
        "description": "add if"
    },
    "else": {
        "prefix": "else",
        "body": [
            "{% else %}"
        ],
        "description": "add else"
    },
    "endif": {
        "prefix": "endif",
        "body": [
            "{% endif %}"
        ],
        "description": "add endif"
    },
    "endblock": {
        "prefix": "endblock",
        "body": [
            "{% endblock %}"
        ],
        "description": "add endblock"
    },
    "endfor": {
        "prefix": "endfor",
        "body": [
            "{% endfor %}"
        ],
        "description": "add endfor"
    },
    "endset": {
        "prefix": "endset",
        "body": [
            "{% endset %}"
        ],
        "description": "add endset"
    },
    "macro": {
        "prefix": "macro",
        "body": [
            "{% macro ${1:name}(${2:params}) %}${3:...}{% endmacro %}"
        ],
        "description": "add macro"
    },
    "ife": {
        "prefix": "ife",
        "body": [
            "{% if ${1:condition} %} ${2:...} {% else %} ${3:...} {% endif %}"
        ],
        "description": "add if else"
    },
    "verbatim": {
        "prefix": "verbatim",
        "body": [
            "{% verbatim %}${1:...}{% endverbatim %}"
        ],
        "description": "verbatim"
    },
    "spaceless": {
        "prefix": "spaceless",
        "body": [
            "{% spaceless %}${1:...}{% endspaceless %}"
        ],
        "description": "spaceless"
    },
    "Include": {
        "prefix": "include",
        "body": [
            "{% include '${1:template}' %}"
        ],
        "description": "include twig"
    },
    "Include with": {
        "prefix": "include with",
        "body": [
            "{% include '${1:template}' with {$2} %}"
        ],
        "description": "include twig with"
    },
    "btn loader": {
        "prefix": "btn-loader",
        "body": [
            "{% include '_modules/btn/btn.html.twig'",
            "   with {",
            "   'btnClass': 'm-btn ${1:m-btn_primary}'",
            "   'btn_label': '${2:Kup teraz}'",
            "   'icon': '$3'",
            "   'url': '${4:/www/shop/atoms/precart.php}'",
            "   }",
            "%}"
        ],
        "description": "btn module loader"
    },
    "Price box": {
        "prefix": "priceBox-loader",
        "body": [
            "{% include '_modules/priceBox/priceBox.html.twig'",
            "   with {",
            "       'order': [{'old':1}, {'promo':2}],",
            "       'promoPrice': '${1:5681,99}'",
            "       'currency': 'z≈Ç'",
            "   }",
            "%}"
        ],
        "description": "price box"
    },
    "Hamburger loader": {
        "prefix": "hmbg-loader",
        "body": [
            "{% include '_modules/hmbg/hmbg.html.twig'",
            "   with {",
            "       'service': config.core.link",
            "   }",
            "%}"
        ],
        "description": "hmbg module loader"
    },
    "Logo loader": {
        "prefix": "logo-loader",
        "body": [
            "{% include '_modules/logo/logo.html.twig'",
            "   with {",
            "       'service': config.core.link",
            "   }",
            "%}"
        ],
        "description": "logo module loader"
    },
    "icon": {
        "prefix": "icon",
        "body": [
            "<i class='icon-$1'></i>"
        ],
        "description": "add icon tag"
    },
    "trans": {
        "prefix": "trans",
        "body": [
            "{{ '$1'|trans }}"
        ],
        "description": "add translate"
    },
    "imageMacro": {
        "prefix": "imageMacro",
        "body": [
            "{% import '${1:EnpFrontWebBundle::/macro/image.html.twig}' as imageMacro %}"
        ],
        "description": "import image macro form EnpFrontWebBundle"
    },
    "image": {
        "prefix": "image",
        "body": [
            "{{ imageMacro.image('${1:gallery}', ${2:o.availability.icon}, [${3:17, 17}], [${3:17, 17}]) }}"
        ],
        "description": "insert imageMacro with params: image filter (gallery, filemanager), path, sizes"
    },
    "pageZone": {
        "prefix": "pageZone",
        "body": [
            "{{ pageZone('${1:shop}', '${2:how_it_works}') }}"
        ],
        "description": "pageZone insert with params: palce and zone"
    },
    "adZone": {
        "prefix": "adZone",
        "body": [
            "{{ adZone('${1:listing}', '${2:banner_2}', ${3:{'criteria': { 'menuItems.menu_item_id': category.id }, 'pageType': pageType }}) }}"
        ],
        "description": "addZone insert with params: palce and zone"
    },
    "postscript": {
        "prefix": "postscript",
        "body": [
            "{{ postscript('${1:offer_list}', '${2:under_add_to_cart}', ${3:offer}) }}"
        ],
        "description": "postscript insert with params: palce, zone and offer (or o on listing)"
    },
    "emblem": {
        "prefix": "emblem",
        "body": [
            "{{ emblem('${1:list}', '${2:extra}', offer)}}"
        ],
        "description": "emblem insert with params: palce, zone and offer (or o on listing)"
    },
    "productDescribe": {
        "prefix": "productDescribe",
        "body": [
            "{{ productDescribe('${1:offer}', '${2:product_card}', ${3:delivery}) }}"
        ],
        "description": "productDescribe twig extension"
    },
    "newsletter": {
        "prefix": "newsletter",
        "body": [
            "{{ displayNewsletter(['${1:newsletter}'], '${2:sign_in}', '${3:homepage}') }}"
        ],
        "description": "add newsletter twig extension"
    },
    "opinions": {
        "prefix": "opinions",
        "body": [
            "{{ offerOpinions(offer) }}"
        ],
        "description": "add opinions"
    },
    "javascripts": {
        "prefix": "javascripts block",
        "body": [
            "{% block javascripts %}",
            "   {{ parent() }}",
            "   {% javascripts",
            "       'path/to/js'",
            "       'path/to/js'",
            "   %}",
            "   <script src='{{ asset_url }}'></script>",
            "   {% endjavascripts %}",
            "{% endblock %}"
        ],
        "description": "insert javascript block with asset structure"
    },
    "magnific macro": {
        "prefix": "magnific",
        "body": [
            "{% import 'EnpFrontWebBundle::macro/magnific.html.twig' as mfp %}",
            "{% set target = '${1:popupId}' %}",
            "{% set customClass = '$2' %}",
            "   {% set mfp_content %}",
            "       ${3:...}",
            "   {% endset %}",
            "   {{mfp.magnific(target, customClass, mfp_content)}}",
            "{% endblock content %}",

        ],
        "description": "import magnific macro and add usage example"
    },
    "adBlock": {
        "prefix": "adBlock",
        "body": [
            "{{ insertAdBlock('${1:js-category-recommendation}', '${2:category}', offers, category.id|default(null)) }}"
        ],
        "description": "insert adBlock example on category/listing page, first param is css class, second one is template name"
    },
    "controlPanelValue": {
        "prefix": "controlPanelValue",
        "body": [
            "{{ controlPanelValue('${1:code}', getCurrentWebsite().id) }}"
        ],
        "description": "insert controll panel value"
    },
    "EnpFlashMessage": {
        "prefix": "EnpFlashMessage",
        "body": [
            "{{ EnpFlashMessage() }}"
        ],
        "description": "insert EnpFlashMessage"
    },
    "contentLandingpages": {
        "prefix": "contentLandingpages",
        "body": [
            "{% if contentLandingpages[${1:textOnTop}] is defined %}",
		    "   {{ contentLandingpages[${2:textOnTop}] | raw }}",
	        "{% endif %}"
        ],
        "description": "insert contentLandingpages textOnTop or textOnBottom"
    },
    "connectedPages": {
        "prefix": "connectedPages",
        "body": [
            "{{ connectedPages(category, '${1:news_listing.html.twig}', ${1:3}, {'published_date': 'DESC'}) }}"
        ],
        "description": "insert connectedPages"
    },
    "systemAttributeValues": {
        "prefix": "systemAttributeValues",
        "body": [
            "{{(${1:offer}.systemAttributeValues('${2:name}')|first)|default('')}}"
        ],
        "description": "get systemAttributeValues"
    },
    "offerLink": {
        "prefix": "link",
        "body": [
            "{{offerLink(${1:o})}}"
        ],
        "description": "add offer link"
    }
}
